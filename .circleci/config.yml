version: 2.1
orbs:
  slack: circleci/slack@3.4.2
jobs:
  notify_start:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - slack/notify:
        message: "Starting ctcalc deploy"
  update_docker_compose: # TODO only run this when docker-compose.prod.yml is updated
    machine: # TODO what's most light-weight option?
      image: ubuntu-1604:201903-01
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
        - $SERVER_FINGERPRINT
    - run:
        name: Copy docker-compose.yml to Droplet
        command: scp docker-compose.prod.yml $SERVER_USR@$SERVER_URL:~/app
  build_and_publish_api:
    docker:
    - image: circleci/buildpack-deps:stretch
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Build Docker Image
        command: docker build -f api/Dockerfile.prod -t $DOCKERHUB_API_REPO api
    - run:
        name: Publish Docker Image to Docker Hub
        command: |
          echo "$DOCKERHUB_PWD" | docker login -u $DOCKERHUB_USR --password-stdin
          docker push $DOCKERHUB_API_REPO
  build_and_deploy_client:
    docker:
    - image: circleci/node
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Install Dependencies
        command: |
          cd client
          npm i
    - run:
        name: Build Client
        command: |
          cd client
          npm run build
    - run:
        name: Add URL to known_hosts
        command: ssh-keyscan -H $SERVER_URL >> ~/.ssh/known_hosts
    - add_ssh_keys:
        fingerprints:
        - $SERVER_FINGERPRINT
    - run:
        name: Remove Outdated Build from Droplet
        command: ssh $SERVER_USR@$SERVER_URL rm -rf ~/app/build
    - run:
        name: Copy Build to Droplet
        command: scp -r client/build $SERVER_USR@$SERVER_URL:~/app
  restart_containers:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - add_ssh_keys:
        fingerprints:
        - $SERVER_FINGERPRINT
    - run:
        name: Stop, Pull, Restart Running Containers
        command: >
          ssh $SERVER_USR@$SERVER_URL " 
            docker-compose -f ~/app/docker-compose.prod.yml down -v
            docker-compose -f ~/app/docker-compose.prod.yml pull api
            docker-compose -f ~/app/docker-compose.prod.yml up -d --build
          "
    - slack/notify:
        message: "Finished ctcalc deploy"
workflows:
  version: 2.1
  deploy_prod:
    jobs:
    - notify_start:
        context: nicodes
        filters:
          branches:
            only:
            - master
    - update_docker_compose:
        context: nicodes
        requires:
        - notify_start
    - build_and_publish_api:
        context: nicodes
        requires:
        - notify_start
    - build_and_deploy_client:
        context: nicodes
        requires:
        - notify_start
    - restart_containers:
        context: nicodes
        requires:
        - update_docker_compose
        - build_and_publish_api
        - build_and_deploy_client
