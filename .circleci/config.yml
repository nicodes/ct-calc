version: 2.1
orbs:
 slack: circleci/slack@3.4.2
jobs:
 initialize_and_notify: # TODO only run this when docker-compose.prod.yml is updated
  machine: # TODO what's most light-weight option?
   image: ubuntu-1604:201903-01
  steps:
   - checkout
   - slack/notify:
      message: "Starting ctcalc deploy"
   - add_ssh_keys:
      fingerprints:
       - $SERVER_FINGERPRINT
   - run:
      name: Copy docker-compose.yml to Droplet
      command: scp docker-compose.prod.yml $SERVER_USR@$SERVER_URL:$APP_DIR
   - run:
      name: Copy db init script
      command: scp db/init.sh $SERVER_USR@$SERVER_URL:$APP_DIR/db
   - run:
      name: Copy db dump
      command: scp db/dump.sql.gz $SERVER_USR@$SERVER_URL:$APP_DIR/db
 build_and_publish_api:
  docker:
   - image: circleci/buildpack-deps:stretch
  steps:
   - checkout
   - setup_remote_docker
   - run:
      name: Build Docker Image
      command: docker build -f api/Dockerfile.prod -t $DOCKERHUB_API_IMAGE api
   - run:
      name: Publish Docker Image to Docker Hub
      command: |
       echo "$DOCKERHUB_PWD" | docker login -u $DOCKERHUB_USR --password-stdin
       docker push $DOCKERHUB_API_IMAGE
 build_and_deploy_client:
  docker:
   - image: circleci/node
  steps:
   - checkout
   - setup_remote_docker
   - add_ssh_keys:
      fingerprints:
       - $SERVER_FINGERPRINT
   - run:
      name: Add URL to known_hosts
      command: ssh-keyscan -H $SERVER_URL >> ~/.ssh/known_hosts
   - run:
      name: Copy .env for Build
      command: scp $SERVER_USR@$SERVER_URL:$APP_DIR/.env.prod client/.env
   - run:
      name: Install Dependencies
      command: |
       cd client
       npm i --production
   - run:
      name: Build Client
      command: |
       cd client
       npm run build
   - run:
      name: Remove Outdated Build from Droplet
      command: ssh $SERVER_USR@$SERVER_URL rm -rf $APP_DIR/build
   - run:
      name: Copy Build to Droplet
      command: scp -r client/build $SERVER_USR@$SERVER_URL:$APP_DIR
 restart_containers:
  machine:
   image: ubuntu-1604:201903-01
  steps:
   - add_ssh_keys:
      fingerprints:
       - $SERVER_FINGERPRINT
   - run:
      name: Stop, Pull, Restart Running Containers
      command: >
       ssh $SERVER_USR@$SERVER_URL "
        docker-compose -f $APP_DIR/docker-compose.prod.yml --env-file $APP_DIR/.env.prod down -v
        docker-compose -f $APP_DIR/docker-compose.prod.yml --env-file $APP_DIR/.env.prod pull api
        docker-compose -f $APP_DIR/docker-compose.prod.yml --env-file $APP_DIR/.env.prod up -d --build
       "
   - slack/notify:
      message: "Finished ctcalc deploy"
workflows:
 version: 2.1
 deploy_prod:
  filters:
   branches:
    only:
     - master
  jobs:
   - initialize_and_notify:
      context: nicodes
   - build_and_publish_api:
      context: nicodes
   - build_and_deploy_client:
      context: nicodes
   - restart_containers:
      context: nicodes
      requires:
       - initialize_and_notify
       - build_and_publish_api
       - build_and_deploy_client
